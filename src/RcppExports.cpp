// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/sphm.h"
#include <RcppEigen.h>
#include <scorematchingad.h>
#include <Rcpp.h>
#include <utils/PrintFor.hpp>
#include <likelihoods/likelihoods.hpp>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ldSvMF_cann
veca1 ldSvMF_cann(mata1 y, a1type k, veca1 a, mata1 G);
RcppExport SEXP _sphm_ldSvMF_cann(SEXP ySEXP, SEXP kSEXP, SEXP aSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mata1 >::type y(ySEXP);
    Rcpp::traits::input_parameter< a1type >::type k(kSEXP);
    Rcpp::traits::input_parameter< veca1 >::type a(aSEXP);
    Rcpp::traits::input_parameter< mata1 >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(ldSvMF_cann(y, k, a, G));
    return rcpp_result_gen;
END_RCPP
}
// ldSvMF_muV
veca1 ldSvMF_muV(mata1 y, a1type k, veca1 m, a1type a1, mata1 V);
RcppExport SEXP _sphm_ldSvMF_muV(SEXP ySEXP, SEXP kSEXP, SEXP mSEXP, SEXP a1SEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mata1 >::type y(ySEXP);
    Rcpp::traits::input_parameter< a1type >::type k(kSEXP);
    Rcpp::traits::input_parameter< veca1 >::type m(mSEXP);
    Rcpp::traits::input_parameter< a1type >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< mata1 >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(ldSvMF_muV(y, k, m, a1, V));
    return rcpp_result_gen;
END_RCPP
}
// meanlinkS2Scpp
mata1 meanlinkS2Scpp(const mata1& x, const veca1& vec, const int p);
RcppExport SEXP _sphm_meanlinkS2Scpp(SEXP xSEXP, SEXP vecSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const mata1& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const veca1& >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< const int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(meanlinkS2Scpp(x, vec, p));
    return rcpp_result_gen;
END_RCPP
}
// pobjS2Scpp
veca1 pobjS2Scpp(const veca1& omvec, const veca1& dyn, const vecd& p_in, const matd& yx);
RcppExport SEXP _sphm_pobjS2Scpp(SEXP omvecSEXP, SEXP dynSEXP, SEXP p_inSEXP, SEXP yxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const veca1& >::type omvec(omvecSEXP);
    Rcpp::traits::input_parameter< const veca1& >::type dyn(dynSEXP);
    Rcpp::traits::input_parameter< const vecd& >::type p_in(p_inSEXP);
    Rcpp::traits::input_parameter< const matd& >::type yx(yxSEXP);
    rcpp_result_gen = Rcpp::wrap(pobjS2Scpp(omvec, dyn, p_in, yx));
    return rcpp_result_gen;
END_RCPP
}
// pobjS2Stape
Rcpp::XPtr< CppAD::ADFun<double> > pobjS2Stape(veca1& omvec, vecd& p_in, matd& yx);
RcppExport SEXP _sphm_pobjS2Stape(SEXP omvecSEXP, SEXP p_inSEXP, SEXP yxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< veca1& >::type omvec(omvecSEXP);
    Rcpp::traits::input_parameter< vecd& >::type p_in(p_inSEXP);
    Rcpp::traits::input_parameter< matd& >::type yx(yxSEXP);
    rcpp_result_gen = Rcpp::wrap(pobjS2Stape(omvec, p_in, yx));
    return rcpp_result_gen;
END_RCPP
}
// OmegaS2S_constraints
veca1 OmegaS2S_constraints(const veca1& vec, const int p);
RcppExport SEXP _sphm_OmegaS2S_constraints(SEXP vecSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const veca1& >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< const int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(OmegaS2S_constraints(vec, p));
    return rcpp_result_gen;
END_RCPP
}
// OmegaS2S_constraintstape
Rcpp::XPtr< CppAD::ADFun<double> > OmegaS2S_constraintstape(veca1& omvec, vecd& p_in);
RcppExport SEXP _sphm_OmegaS2S_constraintstape(SEXP omvecSEXP, SEXP p_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< veca1& >::type omvec(omvecSEXP);
    Rcpp::traits::input_parameter< vecd& >::type p_in(p_inSEXP);
    rcpp_result_gen = Rcpp::wrap(OmegaS2S_constraintstape(omvec, p_in));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sphm_ldSvMF_cann", (DL_FUNC) &_sphm_ldSvMF_cann, 4},
    {"_sphm_ldSvMF_muV", (DL_FUNC) &_sphm_ldSvMF_muV, 5},
    {"_sphm_meanlinkS2Scpp", (DL_FUNC) &_sphm_meanlinkS2Scpp, 3},
    {"_sphm_pobjS2Scpp", (DL_FUNC) &_sphm_pobjS2Scpp, 4},
    {"_sphm_pobjS2Stape", (DL_FUNC) &_sphm_pobjS2Stape, 3},
    {"_sphm_OmegaS2S_constraints", (DL_FUNC) &_sphm_OmegaS2S_constraints, 2},
    {"_sphm_OmegaS2S_constraintstape", (DL_FUNC) &_sphm_OmegaS2S_constraintstape, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_sphm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
